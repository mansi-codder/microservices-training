version: '3.4'

services:
  catalogdb:
    container_name: catalogdb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  basketdb:
    container_name: basketdb
    restart: always
    ports:
      - "6379:6379"

  orderinglatestdb:
    container_name: orderinglatestdb
    restart: always
    ports:
      - "6378:6379"

  rabbitmq:
    container_name: rabbitmq
    restart: always
    ports:
        - "5672:5672"
        - "15672:15672"

  portainer:
    container_name: portainer
    restart: always
    ports:
      - "8080:8000"
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  catalog.api:
    container_name: catalog.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "MongoDB:ConnectionString=mongodb://root:example@catalogdb:27017"
  
    ports:
      - "8001:80"

  basket.api:
    container_name: basket.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "CacheSettings:ConnectionString=basketdb:6379"
      - "EventBusSettings:HostAddress=amqp://guest:guest@rabbitmq:5672"
    depends_on:
      - basketdb
    ports:
      - "8002:80"

  orderinglatest.api:
    container_name: orderinglatest.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "EventBusSettings:HostAddress=amqp://guest:guest@rabbitmq:5672"
      - "CacheSettings:ConnectionString=orderinglatestdb:6379"
    depends_on:
        - orderinglatestdb
        - rabbitmq
    ports:
        - "8004:80"

